é
-f:\Dev\deviceDetectWF\deviceDetectWF\About.cs
	namespace 	
deviceDetectWF
 
{ 
public 

partial 
class 
About 
:  
Form! %
{		 
public

 
About

 
(

 
)

 
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
private 
void 

About_Load 
(  
object  &
sender' -
,- .
	EventArgs/ 8
e9 :
): ;
{ 	
System 
. 

Reflection 
. 
Assembly &
assembly' /
=0 1
System2 8
.8 9

Reflection9 C
.C D
AssemblyD L
.L M 
GetExecutingAssemblyM a
(a b
)b c
;c d
FileVersionInfo 
fvi 
=  !
FileVersionInfo" 1
.1 2
GetVersionInfo2 @
(@ A
assemblyA I
.I J
LocationJ R
)R S
;S T
labelVersion 
. 
Text 
= 
$str  *
++ ,
fvi- 0
.0 1
FileVersion1 <
;< =
} 	
private 
void 
panel1_DoubleClick '
(' (
object( .
sender/ 5
,5 6
	EventArgs7 @
eA B
)B C
{ 	
string 
decodedString  
=! "
Encoding# +
.+ ,
ASCII, 1
.1 2
	GetString2 ;
(; <
Convert< C
.C D
FromBase64StringD T
(T U
$str	U ì
)
ì î
)
î ï
;
ï ñ
Process 
. 
Start 
( 
decodedString '
)' (
;( )
} 	
private 
void 
About_Leave  
(  !
object! '
sender( .
,. /
	EventArgs0 9
e: ;
); <
{ 	
this 
. 
Close 
( 
) 
; 
} 	
private!! 
void!! 
About_Deactivate!! %
(!!% &
object!!& ,
sender!!- 3
,!!3 4
	EventArgs!!5 >
e!!? @
)!!@ A
{"" 	
this## 
.## 
Close## 
(## 
)## 
;## 
}$$ 	
}%% 
}&& ≥
3f:\Dev\deviceDetectWF\deviceDetectWF\DeviceEntry.cs
	namespace 	
deviceDetectWF
 
{ 
public 
sealed 
class 
DeviceEntry '
:( )

IEquatable* 4
<4 5
DeviceEntry5 @
>@ A
{ 	
public		 
string		 

DeviceName		 $
{		% &
get		' *
;		* +
set		, /
;		/ 0
}		1 2
public

 
string

 
DeviceId

 "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
public 
override 
string "
ToString# +
(+ ,
), -
{ 
return 

DeviceName 
+  
$str! %
+& '
DeviceId( 0
+1 2
$str3 6
;6 7
} 
public 
override 
bool  
Equals! '
(' (
object( .
obj/ 2
)2 3
{ 
if 
( 
obj 
== 
null 
)  
return 
false  
;  !
if 
( 
! 
( 
obj 
is 
DeviceEntry (
	objAsPart) 2
)2 3
)3 4
return 
false  
;  !
return 
Equals 
( 
	objAsPart '
)' (
;( )
} 
public 
override 
int 
GetHashCode  +
(+ ,
), -
{ 
MD5 
	md5Hasher 
= 
MD5  #
.# $
Create$ *
(* +
)+ ,
;, -
return 
BitConverter #
.# $
ToInt32$ +
(+ ,
	md5Hasher, 5
.5 6
ComputeHash6 A
(A B
EncodingB J
.J K
UTF8K O
.O P
GetBytesP X
(X Y
DeviceIdY a
)a b
)b c
,c d
$nume f
)f g
;g h
} 
public   
bool   
Equals   
(   
DeviceEntry   *
other  + 0
)  0 1
{!! 
if"" 
("" 
other"" 
=="" 
null"" !
)""! "
return## 
false##  
;##  !
return$$ 
($$ 
this$$ 
.$$ 
DeviceId$$ %
.$$% &
Equals$$& ,
($$, -
other$$- 2
.$$2 3
DeviceId$$3 ;
)$$; <
)$$< =
;$$= >
}%% 
}&& 	
}(( ç
3f:\Dev\deviceDetectWF\deviceDetectWF\DevicesList.cs
	namespace 	
deviceDetectWF
 
{ 
public 

class 
DevicesList 
: 
List "
<" #
DeviceEntry# .
>. /
{ 
public 
string 
Name 
{ 
get  
;  !
}" #
public		 
int		 
Id		 
{		 
get		 
;		 
}		 
public

 
List

 
<

 
DeviceEntry

 
>

  
Devices

! (
{

) *
get

+ .
;

. /
set

0 3
;

3 4
}

5 6
=

7 8
new

9 <
List

= A
<

A B
DeviceEntry

B M
>

M N
(

N O
)

O P
;

P Q
public 
DevicesList 
( 
string !
	eventType" +
)+ ,
{ 	
Name 
= 
	eventType 
+ 
$str "
+# $
DateTime% -
.- .
Now. 1
;1 2
Id 
= 
BitConverter 
. 
ToInt32 %
(% &
Guid& *
.* +
NewGuid+ 2
(2 3
)3 4
.4 5
ToByteArray5 @
(@ A
)A B
,B C
$numD E
)E F
;F G
} 	
} 
} Œà
0f:\Dev\deviceDetectWF\deviceDetectWF\MainForm.cs
	namespace 	
deviceDetectWF
 
{ 
public 

partial 
class 
MainForm !
:" #
Form$ (
{ 
private 
bool 
running 
= 
false $
;$ %
public 
BindingList 
< 
DevicesList &
>& '
	Snapshots( 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
=@ A
newB E
BindingListF Q
<Q R
DevicesListR ]
>] ^
(^ _
)_ `
;` a
public 
MainForm 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "!
toolStripStatusLabel1 !
.! "
Text" &
=' (
DateTime) 1
.1 2
Now2 5
.5 6
ToString6 >
(> ?
)? @
+A B
$strC K
;K L
InitBinding 
( 
) 
; 
} 	
private 
void 
InitBinding  
(  !
)! "
{ 	
SnapshotsList 
. 

DataSource $
=% &
	Snapshots' 0
;0 1
SnapshotsList 
. 
DisplayMember '
=( )
$str* 0
;0 1
SnapshotsList 
. 
ValueMember %
=& '
$str( ,
;, -
} 	
private!! 
void!! '
exitToolStripMenuItem_Click!! 0
(!!0 1
object!!1 7
sender!!8 >
,!!> ?
	EventArgs!!@ I
e!!J K
)!!K L
{"" 	
Application## 
.## 
Exit## 
(## 
)## 
;## 
}$$ 	
	protected&& 
override&& 
void&& 
WndProc&&  '
(&&' (
ref&&( +
Message&&, 3
m&&4 5
)&&5 6
{'' 	
base(( 
.(( 
WndProc(( 
((( 
ref(( 
m(( 
)(( 
;((  
if)) 
()) 
running)) 
&&)) 
()) 
m)) 
.)) 
WParam)) $
.))$ %
ToInt32))% ,
()), -
)))- .
==))/ 1
$num))2 5
)))5 6
)))6 7
GetDevicesList** 
(** 
$str** .
)**. /
;**/ 0
}++ 	
private-- 
void-- 
GetDevicesList-- #
(--# $
string--$ *
	eventType--+ 4
)--4 5
{.. 	!
toolStripStatusLabel1// !
.//! "
Text//" &
=//' (
DateTime//) 1
.//1 2
Now//2 5
.//5 6
ToString//6 >
(//> ?
)//? @
+//A B
$str//C F
+//G H
	eventType//I R
;//R S$
ManagementObjectSearcher00 $
searcher00% -
=00. /
new000 3$
ManagementObjectSearcher004 L
(00L M
$str00M l
)00l m
;00m n
Thread11 
thread11 
=11 
new11 
Thread11  &
(11& '
new11' *
ThreadStart11+ 6
(116 7
(117 8
)118 9
=>11: <
{22 
DevicesList33 
currentList33 '
=33( )
new33* -
DevicesList33. 9
(339 :
	eventType33: C
)33C D
;33D E
foreach55 
(55  
ManagementBaseObject55 -
devices55. 5
in556 8
searcher559 A
.55A B
Get55B E
(55E F
)55F G
)55G H
{66 
string77 

deviceName77 %
;77% &
string88 
deviceID88 #
;88# $
try:: 
{:: 

deviceName;; "
=;;# $
devices;;% ,
.;;, -
GetPropertyValue;;- =
(;;= >
$str;;> D
);;D E
.;;E F
ToString;;F N
(;;N O
);;O P
;;;P Q
}<< 
catch<< 
{<< 

deviceName== "
===# $
$str==% 5
;==5 6
}>> 
try@@ 
{@@ 
deviceIDAA  
=AA! "
devicesAA# *
.AA* +
GetPropertyValueAA+ ;
(AA; <
$strAA< F
)AAF G
.AAG H
ToStringAAH P
(AAP Q
)AAQ R
;AAR S
}BB 
catchBB 
{BB 
deviceIDCC  
=CC! "
$strCC# /
;CC/ 0
}DD 
currentListFF 
.FF  
DevicesFF  '
.FF' (
AddFF( +
(FF+ ,
newFF, /
DeviceEntryFF0 ;
{FF< =
DeviceIdFF> F
=FFG H
deviceIDFFI Q
,FFQ R

DeviceNameFFS ]
=FF^ _

deviceNameFF` j
}FFk l
)FFl m
;FFm n
}GG 
	SnapshotsII 
.II 
AddII 
(II 
currentListII )
)II) *
;II* +
InvokeJJ 
(JJ 
newJJ  
ResetBindingCallbackJJ /
(JJ/ 0
ResetBindingJJ0 <
)JJ< =
)JJ= >
;JJ> ?
}LL 
)LL 
)LL 
;LL 
threadMM 
.MM 
StartMM 
(MM 
)MM 
;MM 
}NN 	
privatePP 
delegatePP 
voidPP  
ResetBindingCallbackPP 2
(PP2 3
)PP3 4
;PP4 5
privateRR 
voidRR 
ResetBindingRR !
(RR! "
)RR" #
{SS 	
ifTT 
(TT 
runningTT 
)TT 
	SnapshotsUU 
.UU 
ResetBindingsUU '
(UU' (
)UU( )
;UU) *
}VV 	
privateXX 
voidXX (
startToolStripMenuItem_ClickXX 1
(XX1 2
objectXX2 8
senderXX9 ?
,XX? @
	EventArgsXXA J
eXXK L
)XXL M
{YY 	"
startToolStripMenuItemZZ "
.ZZ" #
EnabledZZ# *
=ZZ+ ,
falseZZ- 2
;ZZ2 3!
stopToolStripMenuItem[[ !
.[[! "
Enabled[[" )
=[[* +
true[[, 0
;[[0 1
GetDevicesList\\ 
(\\ 
$str\\ *
)\\* +
;\\+ ,
this]] 
.]] 
running]] 
=]] 
true]] 
;]]  
}^^ 	
private`` 
void`` '
stopToolStripMenuItem_Click`` 0
(``0 1
object``1 7
sender``8 >
,``> ?
	EventArgs``@ I
e``J K
)``K L
{aa 	
runningbb 
=bb 
falsebb 
;bb !
toolStripStatusLabel1cc !
.cc! "
Textcc" &
=cc' (
DateTimecc) 1
.cc1 2
Nowcc2 5
.cc5 6
ToStringcc6 >
(cc> ?
)cc? @
+ccA B
$strccC R
;ccR S!
stopToolStripMenuItemdd !
.dd! "
Enableddd" )
=dd* +
falsedd, 1
;dd1 2"
startToolStripMenuItemee "
.ee" #
Enabledee# *
=ee+ ,
trueee- 1
;ee1 2
}ff 	
privatehh 
voidhh +
clearLogToolStripMenuItem_Clickhh 4
(hh4 5
objecthh5 ;
senderhh< B
,hhB C
	EventArgshhD M
ehhN O
)hhO P
{ii 	
TextBoxjj 
.jj 
Clearjj 
(jj 
)jj 
;jj !
toolStripStatusLabel1kk !
.kk! "
Textkk" &
=kk' (
DateTimekk) 1
.kk1 2
Nowkk2 5
.kk5 6
ToStringkk6 >
(kk> ?
)kk? @
+kkA B
$strkkC Q
;kkQ R
}ll 	
privatenn 
voidnn (
aboutToolStripMenuItem_Clicknn 1
(nn1 2
objectnn2 8
sendernn9 ?
,nn? @
	EventArgsnnA J
ennK L
)nnL M
{oo 	
Aboutpp 
	aboutFormpp 
=pp 
newpp !
Aboutpp" '
(pp' (
)pp( )
;pp) *
	aboutFormqq 
.qq 

ShowDialogqq  
(qq  !
)qq! "
;qq" #
}rr 	
privatett 
voidtt #
SelectedSnapshotChangedtt ,
(tt, -
objecttt- 3
sendertt4 :
,tt: ;
	EventArgstt< E
ettF G
)ttG H
{uu 	
ifvv 
(vv 
SnapshotsListvv 
.vv 
SelectedItemvv *
!=vv+ -
nullvv. 2
)vv2 3
{ww 
TextBoxxx 
.xx 
Clearxx 
(xx 
)xx 
;xx  
TextBoxyy 
.yy 

AppendTextyy "
(yy" #
	Snapshotsyy# ,
[yy, -
SnapshotsListyy- :
.yy: ;
SelectedIndexyy; H
]yyH I
.yyI J
NameyyJ N
+yyO P
$stryyQ U
)yyU V
;yyV W
if{{ 
({{ 
SnapshotsList{{ !
.{{! "
SelectedIndex{{" /
>{{0 1
$num{{2 3
){{3 4
{|| 
List}} 
<}} 
DeviceEntry}} $
>}}$ %
removedDevices}}& 4
=}}5 6
	Snapshots}}7 @
[}}@ A
SnapshotsList}}A N
.}}N O
SelectedIndex}}O \
-}}\ ]
$num}}] ^
]}}^ _
.}}_ `
Devices}}` g
.}}g h
Except}}h n
(}}n o
	Snapshots}}o x
[}}x y
SnapshotsList	}}y Ü
.
}}Ü á
SelectedIndex
}}á î
]
}}î ï
.
}}ï ñ
Devices
}}ñ ù
)
}}ù û
.
}}û ü
ToList
}}ü •
(
}}• ¶
)
}}¶ ß
;
}}ß ®
List~~ 
<~~ 
DeviceEntry~~ $
>~~$ %
addedDevices~~& 2
=~~3 4
	Snapshots~~5 >
[~~> ?
SnapshotsList~~? L
.~~L M
SelectedIndex~~M Z
]~~Z [
.~~[ \
Devices~~\ c
.~~c d
Except~~d j
(~~j k
	Snapshots~~k t
[~~t u
SnapshotsList	~~u Ç
.
~~Ç É
SelectedIndex
~~É ê
-
~~ê ë
$num
~~ë í
]
~~í ì
.
~~ì î
Devices
~~î õ
)
~~õ ú
.
~~ú ù
ToList
~~ù £
(
~~£ §
)
~~§ •
;
~~• ¶
if
ÄÄ 
(
ÄÄ 
removedDevices
ÄÄ &
.
ÄÄ& '
Count
ÄÄ' ,
>
ÄÄ- .
$num
ÄÄ/ 0
)
ÄÄ0 1
PopulateDevices
ÅÅ '
(
ÅÅ' (
removedDevices
ÅÅ( 6
,
ÅÅ6 7
Color
ÅÅ8 =
.
ÅÅ= >
Red
ÅÅ> A
,
ÅÅA B
$str
ÅÅC \
)
ÅÅ\ ]
;
ÅÅ] ^
if
ÉÉ 
(
ÉÉ 
addedDevices
ÉÉ $
.
ÉÉ$ %
Count
ÉÉ% *
>
ÉÉ+ ,
$num
ÉÉ- .
)
ÉÉ. /
PopulateDevices
ÑÑ '
(
ÑÑ' (
addedDevices
ÑÑ( 4
,
ÑÑ4 5
Color
ÑÑ6 ;
.
ÑÑ; <
Green
ÑÑ< A
,
ÑÑA B
$str
ÑÑC Z
)
ÑÑZ [
;
ÑÑ[ \
}
ÖÖ 
PopulateDevices
áá 
(
áá  
	Snapshots
áá  )
[
áá) *
SnapshotsList
áá* 7
.
áá7 8
SelectedIndex
áá8 E
]
ááE F
.
ááF G
Devices
ááG N
,
ááN O
TextBox
ááP W
.
ááW X
	ForeColor
ááX a
,
ááa b
$stráác é
)ááé è
;ááè ê)
saveToFileToolStripMenuItem
ââ +
.
ââ+ ,
Enabled
ââ, 3
=
ââ4 5
true
ââ6 :
;
ââ: ;.
 copyToClipboardToolStripMenuItem
ää 0
.
ää0 1
Enabled
ää1 8
=
ää9 :
true
ää; ?
;
ää? @
}
ãã 
else
åå 
{
çç )
saveToFileToolStripMenuItem
éé +
.
éé+ ,
Enabled
éé, 3
=
éé4 5
false
éé6 ;
;
éé; <.
 copyToClipboardToolStripMenuItem
èè 0
.
èè0 1
Enabled
èè1 8
=
èè9 :
false
èè; @
;
èè@ A
}
êê 
}
ëë 	
private
ìì 
void
ìì 
PopulateDevices
ìì $
(
ìì$ %
List
ìì% )
<
ìì) *
DeviceEntry
ìì* 5
>
ìì5 6
list
ìì7 ;
,
ìì; <
Color
ìì= B
color
ììC H
,
ììH I
string
ììJ P
header
ììQ W
)
ììW X
{
îî 	
TextBox
ïï 
.
ïï 
SelectionColor
ïï "
=
ïï# $
color
ïï% *
;
ïï* +
TextBox
ññ 
.
ññ 
SelectionFont
ññ !
=
ññ" #
new
ññ$ '
Font
ññ( ,
(
ññ, -
TextBox
ññ- 4
.
ññ4 5
Font
ññ5 9
,
ññ9 :
	FontStyle
ññ; D
.
ññD E
Bold
ññE I
)
ññI J
;
ññJ K
TextBox
óó 
.
óó 

AppendText
óó 
(
óó 
header
óó %
+
óó& '
$str
óó( ,
)
óó, -
;
óó- .
TextBox
òò 
.
òò 
SelectionFont
òò !
=
òò" #
new
òò$ '
Font
òò( ,
(
òò, -
TextBox
òò- 4
.
òò4 5
Font
òò5 9
,
òò9 :
	FontStyle
òò; D
.
òòD E
Regular
òòE L
)
òòL M
;
òòM N
foreach
ôô 
(
ôô 
DeviceEntry
ôô  

deviceLine
ôô! +
in
ôô, .
list
ôô/ 3
)
ôô3 4
{
öö 
TextBox
õõ 
.
õõ 
SelectionColor
õõ &
=
õõ' (
color
õõ) .
;
õõ. /
TextBox
úú 
.
úú 

AppendText
úú "
(
úú" #

deviceLine
úú# -
.
úú- .
ToString
úú. 6
(
úú6 7
)
úú7 8
+
úú9 :
$str
úú; ?
)
úú? @
;
úú@ A
}
ùù 
TextBox
ûû 
.
ûû 

AppendText
ûû 
(
ûû 
$str
ûû #
)
ûû# $
;
ûû$ %
}
üü 	
private
°° 
void
°° /
!saveToFileToolStripMenuItem_Click
°° 6
(
°°6 7
object
°°7 =
sender
°°> D
,
°°D E
	EventArgs
°°F O
e
°°P Q
)
°°Q R
{
¢¢ 	
if
££ 
(
££ 
saveFileDialog1
££ 
.
££  

ShowDialog
££  *
(
££* +
)
££+ ,
==
££- /
DialogResult
££0 <
.
££< =
OK
££= ?
)
££? @
{
§§ 
TextBox
•• 
.
•• 
SaveFile
••  
(
••  !
saveFileDialog1
••! 0
.
••0 1
OpenFile
••1 9
(
••9 :
)
••: ;
,
••; <#
RichTextBoxStreamType
••= R
.
••R S
	PlainText
••S \
)
••\ ]
;
••] ^#
toolStripStatusLabel1
¶¶ %
.
¶¶% &
Text
¶¶& *
=
¶¶+ ,
DateTime
¶¶- 5
.
¶¶5 6
Now
¶¶6 9
.
¶¶9 :
ToString
¶¶: B
(
¶¶B C
)
¶¶C D
+
¶¶E F
$str
¶¶G ]
+
¶¶^ _
saveFileDialog1
¶¶` o
.
¶¶o p
FileName
¶¶p x
;
¶¶x y
}
ßß 
}
®® 	
private
™™ 
void
™™ 4
&copyToClipboardToolStripMenuItem_Click
™™ ;
(
™™; <
object
™™< B
sender
™™C I
,
™™I J
	EventArgs
™™K T
e
™™U V
)
™™V W
{
´´ 	
TextBox
¨¨ 
.
¨¨ 
	SelectAll
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨  
TextBox
≠≠ 
.
≠≠ 
Copy
≠≠ 
(
≠≠ 
)
≠≠ 
;
≠≠ 
TextBox
ÆÆ 
.
ÆÆ 
DeselectAll
ÆÆ 
(
ÆÆ  
)
ÆÆ  !
;
ÆÆ! "#
toolStripStatusLabel1
ØØ !
.
ØØ! "
Text
ØØ" &
=
ØØ' (
DateTime
ØØ) 1
.
ØØ1 2
Now
ØØ2 5
.
ØØ5 6
ToString
ØØ6 >
(
ØØ> ?
)
ØØ? @
+
ØØA B
$str
ØØC ]
;
ØØ] ^
}
∞∞ 	
private
≤≤ 
void
≤≤ 
	ShowHowTo
≤≤ 
(
≤≤ 
object
≤≤ %
sender
≤≤& ,
,
≤≤, -
	EventArgs
≤≤. 7
e
≤≤8 9
)
≤≤9 :
{
≥≥ 	
TextBox
¥¥ 
.
¥¥ 
Clear
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥ 
TextBox
µµ 
.
µµ 

AppendText
µµ 
(
µµ 
$strµµ †
)µµ† °
;µµ° ¢
TextBox
∂∂ 
.
∂∂ 

AppendText
∂∂ 
(
∂∂ 
$str∂∂ œ
)∂∂œ –
;∂∂– —
}
∑∑ 	
}
∏∏ 
}ππ ∂
/f:\Dev\deviceDetectWF\deviceDetectWF\Program.cs
	namespace 	
deviceDetectWF
 
{ 
static		 

class		 
Program		 
{

 
[ 	
	STAThread	 
] 
static 
void 
Main 
( 
) 
{ 	
Application 
. 
EnableVisualStyles *
(* +
)+ ,
;, -
Application 
. -
!SetCompatibleTextRenderingDefault 9
(9 :
false: ?
)? @
;@ A
Application 
. 
Run 
( 
new 
MainForm  (
(( )
)) *
)* +
;+ ,
} 	
} 
} Í
?f:\Dev\deviceDetectWF\deviceDetectWF\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str )
)) *
]* +
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 ;
)		; <
]		< =
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str '
)' (
]( )
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str +
)+ ,
], -
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str =
)= >
]> ?
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *